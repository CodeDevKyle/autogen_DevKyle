[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[metadata]
license_file = "LICENSE"
description-file = "README.md"


[tool.pytest.ini_options]
addopts = '-m "not conda"'
markers = [
    "conda: test related to conda forge distribution"
]

[tool.black]
# https://github.com/psf/black
line-length = 120
exclude = "(.eggs|.git|.hg|.mypy_cache|.venv|_build|buck-out|build|dist)"


[tool.ruff]
line-length = 120
# Enable Pyflakes `E` and `F` codes by default.
select = [
    "E", "W",  # see: https://pypi.org/project/pycodestyle
    "F",  # see: https://pypi.org/project/pyflakes
#    "D",  # see: https://pypi.org/project/pydocstyle
#    "N",  # see: https://pypi.org/project/pep8-naming
#    "S",  # see: https://pypi.org/project/flake8-bandit
]
ignore = [
    "E501",
    "F401",
    "F403",
    "C901",
]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".eggs",
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    "__pypackages__",
    "_build",
    "build",
    "dist",
    "docs"
]
ignore-init-module-imports = true
unfixable = ["F401"]

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.pdm]
version = { source = "file", path = "autogen/version.py" }

[project]
name = "pyautogen"
dynamic = ["version"]
description = "Enabling Next-Gen LLM Applications via Multi-Agent Conversation Framework"
readme = "README.md"
authors = [
    {name = "AutoGen", email = "auto-gen@outlook.com"},
]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
]
requires-python = ">=3.9,<3.12"
dependencies = [
    "diskcache",
    "flaml",
    "openai>=1.3",
    "python-dotenv",
    "termcolor",
    "tiktoken",
    "pydantic>=1.10,<3"
]

[project.urls]
Homepage = "https://github.com/microsoft/autogen"

[tool.pdm.dev-dependencies]
test = [
    "coverage>=5.3",
    "ipykernel",
    "nbconvert",
    "nbformat",
    "pre-commit",
    "pytest-asyncio",
    "pytest>=6.1.1",
]

[project.optional-dependencies]
docker = [
    "docker>=7.0.0",
]
blendsearch = [
    "flaml[blendsearch]",
]
mathchat = [
    "pydantic==1.10.9",
    "sympy",
    "wolframalpha",
]
retrievechat = [
    "chromadb",
    "ipython~=8.18.1",
    "pypdf",
    "sentence_transformers",
]
teachable = [
    "chromadb",
]
lmm = [
    "pillow",
    "replicate",
]
graphs = [
    "matplotlib~=3.8.2",
    "networkx~=3.2.1",
]

[tool.pdm.scripts]
checks = "pre-commit run --all-files"
